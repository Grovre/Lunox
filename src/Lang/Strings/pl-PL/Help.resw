<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bug_Suggestion.Text" xml:space="preserve">
    <value>Znalazłeś Błąd? Masz Sugestię?</value>
  </data>
  <data name="Bug_Suggestion_Text_First.Text" xml:space="preserve">
    <value>Jeśli znalazłeś błąd w Lunox, proszę</value>
  </data>
  <data name="Bug_Suggestion_Text_Last.Text" xml:space="preserve">
    <value>zgłoś się przez.</value>
  </data>
  <data name="Bug_Suggestion_Text_Middle.Text" xml:space="preserve">
    <value>poinformuj nas o tym problemie przez.
Jeśli masz prośbę lub sugestię dotyczącą nowej funkcji, skontaktuj się z nami ponownie</value>
  </data>
  <data name="Does.Text" xml:space="preserve">
    <value>Co Robi Lunox?</value>
  </data>
  <data name="Does_Text.Text" xml:space="preserve">
    <value>Dzięki różnej infrastrukturze Lunox umożliwia łatwe wykonywanie konwersji jednostek, konwersji plików, operacji OCR, operacji QR, operacji HTML-CSS-JS-JSON i wielu innych wiodących operacji. Podsumowując, oto kilka funkcji Lunox:
• Nowoczesny wygląd
• Szeroka gama
• Konfigurowalny
• Łatwy w użyciu
• Co najważniejsze, jest to Oprogramowanie Open Source (OSS)!</value>
  </data>
  <data name="Hint.Text" xml:space="preserve">
    <value>Wskazówka</value>
  </data>
  <data name="Hint_Text_Contribute.Text" xml:space="preserve">
    <value>przyczynić się do tego projektu</value>
  </data>
  <data name="Hint_Text_Discussions.Text" xml:space="preserve">
    <value>Dyskusja</value>
  </data>
  <data name="Hint_Text_First.Text" xml:space="preserve">
    <value>Lunox jest obecnie intensywnie rozwijany. Sugestie i opinie</value>
  </data>
  <data name="Hint_Text_Last.Text" xml:space="preserve">
    <value>gorąco polecamy.</value>
  </data>
  <data name="Hint_Text_Middle.Text" xml:space="preserve">
    <value>możesz go wysłać na naszej stronie. Jeśli czujesz się komfortowo pisząc kod w C# (.NET),</value>
  </data>
  <data name="Information.Text" xml:space="preserve">
    <value>Informacja</value>
  </data>
  <data name="Requirements.Text" xml:space="preserve">
    <value>Jakie Są Wymagania Systemowe?</value>
  </data>
  <data name="Requirements_Text.Text" xml:space="preserve">
    <value>• System operacyjny: Windows 11, Windows 10 1809 i nowsze
• Architektura: ARM, ARM64, x64, x86
• Dotyk: opcjonalny
• DirectX: wersja 9 i nowsze
• Aparat: Opcjonalny
• Pamięć wideo: 1 GB lub więcej
• Klawiatura: opcjonalna
• Mysz: opcjonalna
• Pamięć: 1 GB i więcej</value>
  </data>
  <data name="What.Text" xml:space="preserve">
    <value>Co To Jest Lunox?</value>
  </data>
  <data name="What_Text.Text" xml:space="preserve">
    <value>Lunox to konfigurowalny, nowoczesny i zaawansowany uniwersalny zestaw narzędzi narzędzi.</value>
  </data>
</root>